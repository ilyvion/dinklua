Scripts to highlight:
- Cutscene scripts -- Using _cutscene.lua (Examples: s1-wiz, s2-cave2)
  In particular, explain how {"w", #} works, because it's not necessarily
  intuitive. There's also a "wn" (wait now) command to wait a set amount
  once.
- Shop scripts -- Using _items.lua (Examples: s2-healp, s2-out)
- Because choice menus are objects and conditions are proper boolean expressions,
  you can do much more advanced conditions for them, like *OR* instead of *AND*
  among others.
- Code reduction techniques like `misc.initialize_sprite` and
  `misc.create_sprite_initialized` and others.

Things to point out:
- Screenlock replaced by lock_screen(), unlock_screen() and is_screen_locked()
- Scripts are interrupted when a new function is called by the engine. As such,
  using loops like `while true` within a script is perfectly fine
  (examples: s2-man2, s2-wench; `mainloop()`) as long as there's a yielding
  function call in there somewhere, such as `say_stop` or `wait`.
- Because of the `volatile` global, we can avoid needing weird "temporary"
  global variables like the `temp#hold` ones.
- A lot of foo(sprite, etc.) functions have been replaced with sprite:foo(etc.).
  Make a list?

Document:
- The various '_'-prefixed scripts should be documented, at least the ones not
  derived from DinkC, like _misc and _items.
